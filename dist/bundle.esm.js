import{createRenderer as e}from"fela";import{renderToMarkup as t,rehydrate as r,render as i}from"fela-dom";import s from"fela-plugin-embedded";import n from"fela-plugin-prefixer";import o from"fela-plugin-fallback-value";import f from"fela-plugin-unit";const l=require("is-browser"),u={method:"f",defStyles:void 0,plugins:[],preset:{unit:[]},ssr:!1};class p{get mixin(){return Object.freeze(this._mixin)}get style(){return t(this.renderer)}constructor(t={}){const{method:p,ssr:d,plugins:m}=Object.assign({},u,t),c=Object.assign({},u.preset,t.preset||{});if(t.fdef)throw new Error("fela-vue: Change deprecated `fdef` to `defStyles`!");this.renderer=e({plugins:[s(),n(),o(),f(...c.unit),...m]});const{renderer:a}=this,g=t.defStyles;let h,y;g&&([h,y]={object:[g.key,g.value],function:["fdef",g]}[typeof g]),l&&(d?r(a):i(a)),this._mixin={methods:{[p](e,t={}){const r={function:e,object:()=>e,string:(()=>{const t=this.style&&this.style[e];return{function:t,object:()=>t}[typeof t]||(e=>e)})()}[typeof e];return a.renderRule(r,t)}},computed:g?{[h](){return y(this)}}:{}}}}export{p as Renderer};
