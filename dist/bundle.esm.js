import{createRenderer as e,combineRules as t}from"fela";import{renderToMarkup as r,rehydrate as n,render as s}from"fela-dom";import o from"fela-plugin-embedded";import i from"fela-plugin-prefixer";import f from"fela-plugin-fallback-value";import l from"fela-plugin-unit";const c=e=>()=>e,u=e=>e,a=e=>e.replace(/-(\w)/gu,(e,t)=>t.toUpperCase()),p=(()=>{const e=/[^\n]\s*([\w-]+)[:\s]+(.+)[$\n]/g;return(t,...r)=>{const n={};return((e,t)=>{const r=e.length;let n="";for(let s=0;s<r;s++)n+=e[s]+(null==t[s]?"":t[s]);return n})(t,r).replace(e,(e,t,r)=>(";"==(e=>e[e.length-1])(r)&&(r=r.slice(0,-1)),n[a(t)]=isNaN(r)?r:+r,"")),n}})(),d=(()=>{try{return(e=>"object"==typeof e)(window)}catch(e){return!1}})(),h={method:"f",defStyles:void 0,plugins:[],enhancers:[],preset:{unit:[]},ssr:!1},m=Object.freeze({f:"function",o:"object",s:"string"}),g=(()=>{const e=(e,t)=>t.split(/[,\s\t]+/g).map(t=>((e,t)=>e?e[t]||e[a(t)]:{})(e,t));return(t,r)=>{switch(typeof r){case m.f:return[r];case m.o:return[c(r)];case m.s:return e(t,r).reduce((e,r)=>(e.push(...g(t,r)),e),[]);default:return[u]}}})();class y{get mixin(){return Object.freeze(this._mixin)}get style(){return r(this.renderer)}constructor(r={}){const c=Object.assign({},h,r),{method:u,ssr:a,preset:p,plugins:y,enhancers:b}=c,O=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(n=Object.getOwnPropertySymbols(e);s<n.length;s++)t.indexOf(n[s])<0&&(r[n[s]]=e[n[s]])}return r}(c,["method","ssr","preset","plugins","enhancers"]),w=Object.assign({},h.preset,p||{});if(r.fdef)throw new Error("fela-vue: Change deprecated `fdef` to `defStyles`!");this.renderer=e(Object.assign({},O,{enhancers:b,plugins:[o(),i(),f(),l(...w.unit),...y]}));const{renderer:j}=this,v=r.defStyles;let x,S;switch(typeof v){case m.o:[x,S]=[v.key,v.value];break;case m.f:[x,S]=["fdef",v]}d&&(a?n(j):s(j)),this._mixin={methods:{[u](e,r={}){return j.renderRule(t(...g(this.style,e)),r)}},computed:v?{[x](){return S(this)}}:{}}}}export{y as Renderer,p as css};
