import{createRenderer as e}from"fela";import{renderToMarkup as t,rehydrate as r,render as n}from"fela-dom";import o from"fela-plugin-embedded";import i from"fela-plugin-prefixer";import s from"fela-plugin-fallback-value";import f from"fela-plugin-unit";const l=e=>"object"==typeof e,u=(()=>{try{return l(window)}catch(e){return l(global)}})(),p={method:"f",defStyles:void 0,plugins:[],preset:{unit:[]},ssr:!1};class c{get mixin(){return Object.freeze(this._mixin)}get style(){return t(this.renderer)}constructor(t={}){const{method:l,ssr:c,preset:d,plugins:m}=Object.assign({},p,t),a=Object.assign({},p.preset,d||{});if(t.fdef)throw new Error("fela-vue: Change deprecated `fdef` to `defStyles`!");this.renderer=e({plugins:[o(),i(),s(),f(...a.unit),...m]});const{renderer:g}=this,h=t.defStyles;let y,b;h&&([y,b]={object:[h.key,h.value],function:["fdef",h]}[typeof h]),u&&(c?r(g):n(g)),this._mixin={methods:{[l](e,t={}){const r={function:e,object:()=>e,string:(()=>{const t=this.style&&this.style[e];return{function:t,object:()=>t}[typeof t]||(e=>e)})()}[typeof e];return g.renderRule(r,t)}},computed:h?{[y](){return b(this)}}:{}}}}export{c as Renderer};
