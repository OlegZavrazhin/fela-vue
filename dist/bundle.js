"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var fela=require("fela"),felaDom=require("fela-dom"),embedded=_interopDefault(require("fela-plugin-embedded")),prefixer=_interopDefault(require("fela-plugin-prefixer")),fallback=_interopDefault(require("fela-plugin-fallback-value")),unit=_interopDefault(require("fela-plugin-unit"));const always=e=>()=>e,reflect=e=>e,camelify=e=>e.replace(/-(\w)/gu,(e,t)=>t.toUpperCase()),last=e=>e[e.length-1],join=(e,t)=>{const r=e.length;let s="";for(let n=0;n<r;n++)s+=e[n]+(null==t[n]?"":t[n]);return s},css=(()=>{const e=/([}^\n])*?\s*([\w->*:]+)[:\s]+(.*?)([\n;]|{|(?=})|$)/g;return(t,...r)=>{const s={};let n,l=s;return join(t,r).replace(e,(e,t,r,s,i,u,a)=>{if("}"==t){if(!n)throw new Error("Bad rule: "+a);l=n,n=null}if("{"==i){n=l;const e={};l[camelify(r)]=e,l=e}const f=r.includes(":");if(s||f){if(!s&&f){const e=r.split(":");r=e.slice(0,-1).join(":"),s=last(e)}else r=r.slice(0,-1);r&&s&&(l[camelify(r)]=isNaN(s)?s.trim():+s)}return""}),s}})(),isObject=e=>"object"==typeof e,isBrowser=(()=>{try{return isObject(window)}catch{return!1}})(),defaultOpts={method:"f",defStyles:void 0,plugins:[],enhancers:[],preset:{unit:[]},ssr:!1},types=Object.freeze({f:"function",o:"object",s:"string"}),getRules=(()=>{const e=(e,t)=>t.split(/[,\s\t]+/g).map(t=>((e,t)=>e?e[t]||e[camelify(t)]:{})(e,t));return(t,r)=>{switch(typeof r){case types.f:return[r];case types.o:return[always(r)];case types.s:return e(t,r).reduce((e,r)=>(e.push(...getRules(t,r)),e),[]);default:return[reflect]}}})();class Renderer{get mixin(){return Object.freeze(this._mixin)}get style(){return felaDom.renderToMarkup(this.renderer)}constructor(e={}){const{method:t,ssr:r,preset:s,plugins:n,enhancers:l,...i}={...defaultOpts,...e},u={...defaultOpts.preset,...s||{}};if(e.fdef)throw new Error("fela-vue: Change deprecated `fdef` to `defStyles`!");this.renderer=fela.createRenderer({...i,enhancers:l,plugins:[embedded(),prefixer(),fallback(),unit(...u.unit),...n]});const{renderer:a}=this,f=e.defStyles;let o,c;switch(typeof f){case types.o:[o,c]=[f.key,f.value];break;case types.f:[o,c]=["fdef",f]}isBrowser&&(r?felaDom.rehydrate(a):felaDom.render(a)),this._mixin={methods:{[t](e,t={}){return a.renderRule(fela.combineRules(...getRules(this.style,e)),t)}},computed:f?{[o](){return c(this)}}:{}}}}exports.Renderer=Renderer,exports.css=css;
